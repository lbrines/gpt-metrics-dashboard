version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: metricas_postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpassword
      POSTGRES_DB: metricas_gpt
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d metricas_gpt"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./src/backend
    container_name: metricas_backend
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://admin:adminpassword@postgres:5432/metricas_gpt
      CORS_ORIGINS: http://localhost:3000
    volumes:
      - ./src/backend:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  frontend:
    build: ./src/frontend
    container_name: metricas_frontend
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./src/frontend:/app
      - /app/node_modules

  nginx:
    image: nginx:alpine
    container_name: metricas_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3
